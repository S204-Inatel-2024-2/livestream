consumes:
    - application/json
definitions:
    LiveStream:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                type: string
                x-go-name: ID
            name:
                type: string
                x-go-name: Name
            publisher_id:
                type: string
                x-go-name: PublisherId
            stream_key:
                type: string
                x-go-name: StreamKey
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            viewer_count:
                format: int64
                type: integer
                x-go-name: ViewerCount
        type: object
        x-go-package: github.com/gtvb/livestream/models
    User:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            email:
                type: string
                x-go-name: Email
            id:
                type: string
                x-go-name: ID
            name:
                type: string
                x-go-name: Name
            password:
                type: string
                x-go-name: Password
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        type: object
        x-go-package: github.com/gtvb/livestream/models
info:
    description: Documentação da API de liveStreams
    title: LiveStreamAPI
    version: 1.0.0
paths:
    /livestream/:user_id:
        get:
            description: Realiza o login de um usuário e gera um token para futuras operações protegidas
            operationId: getUserLiveStreams
            responses:
                "200":
                    $ref: '#/responses/liveStreamsResponse'
                "404":
                    $ref: '#/responses/messageResponse'
            tags:
                - users
                - livestreams
    /livestream/create:
        post:
            description: |-
                Cria uma nova livestream e atribui ela ao usuário contido no
                corpo da requisição.
            operationId: createLiveStream
            parameters:
                - in: body
                  name: Body
                  schema:
                    properties:
                        name:
                            type: string
                            x-go-name: Name
                        user_id:
                            type: string
                            x-go-name: UserId
                    type: object
            responses:
                "200":
                    $ref: '#/responses/liveStreamResponse'
                "404":
                    $ref: '#/responses/messageResponse'
                "500":
                    $ref: '#/responses/messageResponse'
            tags:
                - livestreams
    /livestream/delete/:id:
        delete:
            operationId: deleteLiveStream
            responses:
                "200":
                    $ref: '#/responses/liveStreamResponse'
                "404":
                    $ref: '#/responses/messageResponse'
                "500":
                    $ref: '#/responses/messageResponse'
            summary: Deleta uma livestream dado um id válido.
            tags:
                - livestreams
    /livestream/update/:id:
        patch:
            description: |-
                Cria uma nova livestream e atribui ela ao usuário contido no
                corpo da requisição.
            operationId: updateLiveStream
            responses:
                "200":
                    $ref: '#/responses/liveStreamResponse'
                "404":
                    $ref: '#/responses/messageResponse'
                "500":
                    $ref: '#/responses/messageResponse'
            tags:
                - livestreams
    /user/:user_id:
        delete:
            description: |-
                Remove um usuário da base de dados, juntamente com todas as liveStreams cadastradas
                sobre seu mesmo id
            operationId: deleteUser
            responses:
                "200":
                    $ref: '#/responses/messageResponse'
                "404":
                    $ref: '#/responses/messageResponse'
            tags:
                - users
        patch:
            description: |-
                Atualiza os dados do usuário identificado pelo `user_id` especificado
                como parâmetro.
            operationId: updateUser
            responses:
                "200":
                    $ref: '#/responses/userResponse'
                "400":
                    $ref: '#/responses/messageResponse'
            tags:
                - users
    /users/:id:
        get:
            description: Retorna as informações sobre um usuário dado um id válido
            operationId: getUserProfile
            responses:
                "200":
                    $ref: '#/responses/userResponse'
                "404":
                    $ref: '#/responses/messageResponse'
            tags:
                - users
    /users/login:
        post:
            description: Realiza o login de um usuário e gera um token para futuras operações protegidas
            operationId: loginUser
            parameters:
                - in: body
                  name: Body
                  schema:
                    properties:
                        email:
                            type: string
                            x-go-name: Email
                        password:
                            type: string
                            x-go-name: Password
                    type: object
            responses:
                "200":
                    $ref: '#/responses/tokenResponse'
                "400":
                    $ref: '#/responses/messageResponse'
                "404":
                    $ref: '#/responses/messageResponse'
                "500":
                    $ref: '#/responses/messageResponse'
            tags:
                - users
    /users/signup:
        post:
            description: Realiza o signup de um usuário e gera um token para futuras operações protegidas
            operationId: signupUser
            parameters:
                - in: body
                  name: Body
                  schema:
                    properties:
                        email:
                            type: string
                            x-go-name: Email
                        name:
                            type: string
                            x-go-name: Name
                        password:
                            type: string
                            x-go-name: Password
                    type: object
            responses:
                "201":
                    $ref: '#/responses/tokenResponse'
                "400":
                    $ref: '#/responses/messageResponse'
                "500":
                    $ref: '#/responses/messageResponse'
            tags:
                - users
responses:
    liveStreamResponse:
        description: ""
        schema:
            properties:
                stream_id:
                    type: string
                    x-go-name: StreamId
            type: object
    liveStreamsResponse:
        description: ""
        schema:
            items:
                $ref: '#/definitions/LiveStream'
            type: array
    messageResponse:
        description: ""
        headers:
            Body: {}
        schema:
            properties:
                message:
                    type: string
                    x-go-name: Message
            type: object
    tokenResponse:
        description: ""
        headers:
            Body:
                description: O token JWT usado para próximas requisições protegidas
        schema:
            properties:
                token:
                    type: string
                    x-go-name: Token
            type: object
    userResponse:
        description: ""
        schema:
            $ref: '#/definitions/User'
schemes:
    - http
swagger: "2.0"
